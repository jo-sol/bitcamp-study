// Grdale 도구에 추가할 작업이 있으면 플러그인을 장착하라!
plugins {  //플러그인 장착 필수
    //id 'java'  // 자바 애플리케이션 빌드 관련 작업들을 추가한다.
    //id 'java'는 javac로 컴파일링 되는 것이고, gradle run은 application에만 있는 것이다.
    id 'application' // = 'java' 플러그인 + 애플리케이션 관련 작업 추가
    id 'eclipse' // 이클립스 IDE 관련 작업 플러그인
    // eclipseProject : .project 파일 생성
    // eclipseClasspath : .classpath 파일 생성
    // eclipseJdt : JDT 관련 파일 생성(.settings/ 폴더 및 파일 생성)
    // eclipse : = eclipseProject + eclipseClasspath
    // cleanEclipseProject : .project 파일 제거
    // cleanEclipseJdt : .settings 파일 제거
    // cleanEclipseClasspath : .class 파일 제거
    // cleanEclipse = cleanEclipseProject + cleanEclipseClasspath + cleanEclipseEclipseJdt
}

// eclipse 프로젝트 이름을 설정하기
eclipse {
    project {
        name = "study-project"
    }
}

// 프로젝트에서 외부의 라이브러리를 사용한다면
// 그 라이브러리 파일(.jar)을 다운로드 받을 서버 정보를 설정하라!
repositories {
    mavenCentral() // https://repo.maven.apache.org/maven2/ 사이트에서 다운로드 받는다.
}

// 프로젝트에서 사용하는 라이브러리 정보를 등록한다.
// => Gradle을 실행할 때 위에서 설정한 서버에 접속하여
//    등록한 라이브러리를 자동으로 다운로드 받는다.
// => 이렇게 다운로드 받은 라이브러리는 컴파일하거나 실행할 때 사용된다.
dependencies { // 의존하는 라이브러리 이름을 적어라: 마음대로 적으면 안 되고 검색해서 찾아서 적어야 함(검색해서 이름을 하기와 같이 넣어줘야 함)
    testImplementation 'junit:junit:4.13.2' // ㄴ 사용자 폴더 밑에서 찾아보고 없으면 자동으로 다운로드
    implementation 'com.google.guava:guava:30.1-jre'
    
        // Google JSON 라이브러리
    implementation 'com.google.code.gson:gson:2.8.8'
}

// 'application' 플러그인에서 run 작업을 수행할 때 사용할
// 클래스 이름을 지정한다.
application {
    mainClass = 'com.eomcs.pms.App'
}

compileJava.options.encoding='UTF-8' // 인코딩 옵션 추가

//